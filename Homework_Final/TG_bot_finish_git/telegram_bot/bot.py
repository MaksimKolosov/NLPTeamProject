import os
import aiohttp
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import CommandStart, Command
from aiogram.types import Message
from aiogram import F # –ú–∞–≥–∏—á–µ—Å–∫–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã
from fastapi import FastAPI, Request

from dotenv import find_dotenv, load_dotenv


load_dotenv(find_dotenv())

SERVER_URL = "http://127.0.0.1:8000/process_audio/"

load_dotenv(find_dotenv())

bot = Bot(token=os.getenv('TOKEN'))
dp = Dispatcher()


# –æ–ø—Ä–µ–¥–µ–ª–∏–º —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥–µ–º –ø–æ–ª—É—á–∞—Ç—å (–æ—Å—Ç–∞–ª—å–Ω—ã–µ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º)
ALLOWED_UPDATES = ["message", "edited_message"]
# "message" - –û–±—ã—á–Ω–æ–µ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (—Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ, voice –∏ —Ç. –¥.)
# "edited_message" - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–ª —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

# –ü–∞–ø–∫–∞ –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–∫–∞—á–∞–Ω–Ω—ã—Ö –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤
TEMP_DIR = "temp_files"
os.makedirs(TEMP_DIR, exist_ok=True)
# exist_ok=True - –Ω–µ –≤—ã–¥–∞—Å—Ç –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –ø–∞–ø–∫–∞ —É–∂–µ —Å–æ–∑–¥–∞–Ω–∞

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏.")

# –õ–æ–≤–∏–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –≥–¥–µ –µ—Å—Ç—å .voice –∏–ª–∏ .audio
@dp.message(F.voice | F.audio)
async def handle_audio(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∏ –∞—É–¥–∏–æ—Å–æ–æ–±—â–µ–Ω–∏–π:
    1. –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫–æ–π —Ñ–∞–π–ª –ø—Ä–∏—à—ë–ª (voice –∏–ª–∏ audio)
    2. –°–∫–∞—á–∏–≤–∞–µ–º –µ–≥–æ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
    3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä FastAPI
    4. –ü–æ–ª—É—á–∞–µ–º JSON —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
    5. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —á–∏—Ç–∞–µ–º—ã–π –æ—Ç–≤–µ—Ç
    6. –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    """
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º ID —Ñ–∞–π–ª–∞ –≤ Telegram (–Ω—É–∂–µ–Ω –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è)
    file_id = message.voice.file_id if message.voice else message.audio.file_id

    # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª –∏–∑ Telegram –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
    file_info = await bot.get_file(file_id)  # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç —Ñ–∞–π–ª–∞ (–ø—É—Ç—å –∫ —Ñ–∞–π–ª—É, —Ä–∞–∑–º–µ—Ä, –¥–∞—Ç–∞ –∏ —Ç.–¥.). –¢–ì —Ö—Ä–∞–Ω–∏—Ç –≤—Å–µ —Ñ–∞–π–ª—ã –Ω–∞ —Å–≤–æ–∏—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö, –∞ –Ω–µ —É –Ω–∞—Å –ª–æ–∫–∞–ª—å–Ω–æ.
    file_path_local = os.path.join(TEMP_DIR, f"{file_id}.ogg")  # –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞ –Ω–∞—à–µ–º –ü–ö.

    await bot.download_file(file_info.file_path, destination=file_path_local)  # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª —Å —Å–µ—Ä–≤–µ—Ä–æ–≤ Telegram –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–π –¥–∏—Å–∫

    await message.answer("üéß –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∞—É–¥–∏–æ...")  # –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ–∫–∞ —Ñ–∞–π–ª —Å–∫–∞—á–∏–≤–∞–µ—Ç—Å—è –∏ –≥–æ—Ç–æ–≤–∏—Ç—Å—è –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä

    try:
        # –°–æ–∑–¥–∞—ë–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é HTTP-—Å–µ—Å—Å–∏—é, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤
        async with aiohttp.ClientSession() as session:

            # –û—Ç–∫—Ä—ã–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª —Å –∞—É–¥–∏–æ –≤ –±–∏–Ω–∞—Ä–Ω–æ–º —Ä–µ–∂–∏–º–µ ("rb" ‚Äî read binary)
            with open(file_path_local, "rb") as f:

                form = aiohttp.FormData()

                # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º—É:
                form.add_field(
                    "file",
                    f,
                    filename=os.path.basename(file_path_local),
                    content_type="audio/ogg"
                )

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST-–∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä —Å –¥–∞–Ω–Ω—ã–º–∏ —Ñ–æ—Ä–º—ã
                async with session.post(SERVER_URL, data=form) as resp:

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞
                    if resp.status == 200:                          # –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—Ç–∏–ª —É—Å–ø–µ—à–Ω–æ
                        data = await resp.json()                    # –ü–æ–ª—É—á–∞–µ–º JSON —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –µ–≥–æ –∏–∑ JSON –≤ –æ–±—ã—á–Ω—ã–π Python —Å–ª–æ–≤–∞—Ä—å (dict).
                        text = data.get("text", "")                 # –±–µ—Ä—ë–º –∑–Ω–∞—á–µ–Ω–∏–µ –∫–ª—é—á–∞ "text" –∏–∑ —Å–ª–æ–≤–∞—Ä—è. "" ‚Äî —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –∫–ª—é—á–∞ "text" –≤–¥—Ä—É–≥ –Ω–µ—Ç.
                        label = data.get("label", -1)               # –ë–µ—Ä—ë–º –∫–ª—é—á "label" –∏–∑ JSON. –ï—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º -1 –∫–∞–∫ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
                        description = data.get("description", "")   # –ë–µ—Ä—ë–º –∫–ª—é—á "description" –∏–∑ JSON. –ï—Å–ª–∏ –∫–ª—é—á –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞.

                        # –§–æ—Ä–º–∏—Ä—É–µ–º —á–∏—Ç–∞–µ–º—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        reply = (
                            f"üí¨Ô∏è–†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:\n{text}\n\n"
                            f"–ö–ª–∞—Å—Å: {label}\n"
                            f"{description}"
                        )

                    # –°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É
                    else:
                        reply = f"–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {resp.status}"

    # –õ–æ–≤–∏–º –æ—à–∏–±–∫–∏ —Å–µ—Ç–∏ –∏–ª–∏ –¥—Ä—É–≥–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
    except Exception as e:
        reply = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ: {e}"

    finally:
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª, —á—Ç–æ–±—ã –Ω–µ –∑–∞—Ö–ª–∞–º–ª—è—Ç—å –¥–∏—Å–∫
        if os.path.exists(file_path_local):
            os.remove(file_path_local)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ Telegram
    await message.answer(reply)

@dp.message()
async def handle_text(message: Message):
    """–û—Ç–≤–µ—Ç –Ω–∞ –æ–±—ã—á–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    await message.answer("üéô –û—Ç–ø—Ä–∞–≤—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏!")


# –°–æ–∑–¥–∞–¥–∏–º —Ñ—É–Ω–∫—Ü–∏—é, —á—Ç–æ–±—ã –±–æ—Ç –Ω–∞—á–∞–ª —Å–ª—É—à–∞—Ç—å Telegram:
async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    await bot.delete_webhook(drop_pending_updates=True)  # –æ—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–π webhook –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.
    # —É Telegram –º–æ–∂–µ—Ç –æ—Å—Ç–∞—Ç—å—Å—è ‚Äú–ø–æ–¥–≤–µ—à–µ–Ω–Ω—ã–π‚Äù webhook ‚Äî –∏ —Ç–æ–≥–¥–∞ polling –Ω–µ –∑–∞—Ä–∞–±–æ—Ç–∞–µ—Ç.

    await dp.start_polling(bot, allowed_updates=ALLOWED_UPDATES)

if __name__ == "__main__":
    import uvicorn
    asyncio.run(main())

